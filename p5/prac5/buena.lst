


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             datos,DATA
    2 00000000         ; variables y constantes
    3 00000000 FFFFF010 
                       VICIntEnable
                               EQU              0xFFFFF010
    4 00000000 FFFFF014 
                       VICIntEnClr
                               EQU              0xFFFFF014
    5 00000000 FFFFF018 
                       VICSoftInt
                               EQU              0xFFFFF018
    6 00000000 FFFFF01C 
                       VICSoftIntClear
                               EQU              0xFFFFF01C
    7 00000000 FFFFF100 
                       VICVectAddr0
                               EQU              0xFFFFF100
    8 00000000 FFFFF030 
                       VICVectAddr
                               EQU              0xFFFFF030
    9 00000000         
   10 00000000 E0010000 
                       TEC_DAT EQU              0xE0010000
   11 00000000         
   12 00000000 E0028004 
                       IOSET   EQU              0xE0028004
   13 00000000 E002800C 
                       IOCLR   EQU              0XE002800C
   14 00000000         
   15 00000000 00000000 
                       tecl_so DCD              0
   16 00000004 00000000 
                       terminar
                               DCD              0
   17 00000008 00000000 
                       reloj_so
                               DCD              0
   18 0000000C         
   19 0000000C E0004000 
                       T0_IR   EQU              0xE0004000
   20 0000000C         
   21 0000000C 00000004 
                       IRQ_I4  EQU              4
   22 0000000C 00000007 
                       IRQ_I7  EQU              7
   23 0000000C         
   24 0000000C 00000000 
                       reloj   DCD              0           ;contador de centes
                                                            imas de segundo 
   25 00000010 00000008 
                       max     DCD              8           ;velocidad de mov. 
                                                            caracter @ (en cent
                                                            esimas s.) 
   26 00000014 00000000 
                       cont    DCD              0           ;instante siguiente
                                                             movimiento caracte
                                                            r @
   27 00000018 00      dirx    DCB              0           ;direccion mov (-1 
                                                            izda,0 stop,1 der.)



ARM Macro Assembler    Page 2 


                                                             
   28 00000019 00      diry    DCB              0           ;direccion mov (-1 
                                                            arriba,0 stop,1 aba
                                                            jo)
   29 0000001A 00      fin     DCB              0           ;indicador fin de p
                                                            rograma si vale 1.
   30 0000001B         
   31 0000001B 0000002E 
                       quehabia
                               EQU              46          ; empieza habiendo 
                                                            un punto
   32 0000001B         
   33 0000001B 00000003 
                       sem     EQU              3
   34 0000001B 00 40007E00 
                       pantup  DCD              0x40007E00  ;marcamos limites d
                                                            e pantalla
   35 00000020 40007FFF 
                       pantdown
                               DCD              0x40007FFF
   36 00000024 00000020 
                       espblanco
                               EQU              32          ;espacio en blanco.
                                                             Ascii espacio en b
                                                            lanco = 32
   37 00000024 00000040 
                       arroba  EQU              64          ; arroba @. Ascii @
                                                             = 64
   38 00000024 0000002E 
                       puntos  EQU              46          ; puntos para sacia
                                                            r su gula.
   39 00000024 0000002A 
                       asterisco
                               EQU              42          ; Para los 4 asteri
                                                            scos. Ascii = 42
   40 00000024 40007F0F 
                       posArroba
                               DCD              0x40007F0F  ; Posicion inicial 
                                                            de la arroba.
   41 00000028 40007E50 
                       posAsterisco
                               DCD              0x40007E50
   42 0000002C         ;Falta poner el limite del movimiento por cada lado al m
                       overse el arroba.
   43 0000002C         
   44 0000002C         
   45 0000002C         
   46 0000002C                 AREA             codigo,CODE
   47 00000000                 EXPORT           inicio      ; forma de enlazar 
                                                            con el startup.s
   48 00000000                 IMPORT           srand       ; para poder invoca
                                                            r SBR srand
   49 00000000                 IMPORT           rand        ; para poder invoca
                                                            r SBR srand
   50 00000000         
   51 00000000         inicio                               ; se recomienda pon
                                                            er punto de parada 
                                                            (breakpoint) en la 
                                                            primera instruccion



ARM Macro Assembler    Page 3 


                                                            
   52 00000000 E59F02E0        ldr              r0,=VICVectAddr0 ; inicializar 
                                                            rutina de interrupc
                                                            ion del timer
   53 00000004         
   54 00000004 E59F12E0        ldr              r1,=RSI_timer
   55 00000008 E3A02004        mov              r2,#IRQ_I4
   56 0000000C E7801102        str              r1,[r0,r2,LSL#2] ; programa @IR
                                                            Q4 -> RSI_timer (mo
                                                            difica el VIC de la
                                                             IRQ)
   57 00000010         
   58 00000010 E59F12D8        ldr              r1,=RSI_teclado
   59 00000014 E3A02007        mov              r2,#IRQ_I7
   60 00000018 E7801102        str              r1,[r0,r2,LSL#2] ; programa @IR
                                                            Q7 -> RSI_teclado (
                                                            modifica el VIC de 
                                                            la IRQ)
   61 0000001C         
   62 0000001C E59F02D0        ldr              r0,=VICIntEnable ; carga el reg
                                                            istro que activa in
                                                            terrupciones
   63 00000020 E5901000        ldr              r1,[r0]
   64 00000024 E3811010        orr              r1,r1,#1<<IRQ_I4 ; activa IRQ4
   65 00000028 E3811080        orr              r1,r1,#1<<IRQ_I7 ; activa IRQ7
   66 0000002C E5801000        str              r1,[r0]     ; guarda el registr
                                                            o máscara de interr
                                                            upciones modificado
                                                            
   67 00000030         
   68 00000030 E59F02C0        ldr              r0,=cont
   69 00000034 E3A01000        mov              r1, #0
   70 00000038 E5C01000        strb             r1,[r0]     ; iniciamos el cont
                                                            ador
   71 0000003C         
   72 0000003C         ; Crea la semilla para numeros aleatorios
   73 0000003C E3A00003        mov              r0,#sem
   74 00000040 E52D0004        push{r0}
   75 00000044 EBFFFFFE        bl               srand
   76 00000048 E49D0004        pop{r0}
   77 0000004C         
   78 0000004C         ;inicio pantalla
   79 0000004C E51F4008        ldr              r4,pantup
   80 00000050 E51F5008        ldr              r5,pantdown ; marcamos los limi
                                                            tes de la pantalla
   81 00000054 E3A0002E        mov              r0,#puntos  ; guardamos en r0 e
                                                            l punto
   82 00000058 E1A01004        mov              r1,r4       ; copiamos r4 en r1
                                                             para no machacar l
                                                            a direccion de inic
                                                            io de la pantalla
   83 0000005C         
   84 0000005C         borrar
   85 0000005C E4C10001        strb             r0,[r1],#1  ; pantalla llena de
                                                             puntos para comer.
                                                            
   86 00000060 E1510005        cmp              r1,r5
   87 00000064 1AFFFFFC        bne              borrar      ; de momento los un
                                                            icos registros que 



ARM Macro Assembler    Page 4 


                                                            usamos son r4 inici
                                                            o de pantalla y r5 
                                                            fin de pantalla
   88 00000068         
   89 00000068 E59F328C        ldr              r3,=posArroba ; guardamos en r3
                                                             la direccion de ar
                                                            roba
   90 0000006C E5933000        ldr              r3,[r3]
   91 00000070 E3A02040        mov              r2,#arroba
   92 00000074 E5C32000        strb             r2,[r3]     ; posicion de arrob
                                                            a
   93 00000078         
   94 00000078         
   95 00000078 E59F3280        ldr              r3,=posAsterisco
   96 0000007C E5933000        ldr              r3,[r3]
   97 00000080 E3A0202A        mov              r2,#asterisco
   98 00000084 E5C32000        strb             r2,[r3]     ; posicion de aster
                                                            isco
   99 00000088         
  100 00000088         bucle
  101 00000088 E59F0274        ldr              r0,=fin
  102 0000008C E5901000        ldr              r1,[r0]
  103 00000090 E3510001        cmp              r1,#1
  104 00000094 0A000030        beq              final       ; el programa termi
                                                            na (Fin=1)
  105 00000098         
  106 00000098 E59F0268        ldr              r0,=TEC_DAT
  107 0000009C E5D01000        ldrb             r1,[r0]
  108 000000A0 E3510051        cmp              r1,#81      ; comparo con la le
                                                            tra 'Q' (finaliza e
                                                            l programa)
  109 000000A4 0AFFFFF7        beq              bucle       ; se ha pulsado la 
                                                            Q para terminar el 
                                                            programa
  110 000000A8         
  111 000000A8 E59F1248        ldr              r1,=cont
  112 000000AC E5911000        ldr              r1,[r1]
  113 000000B0 E59F2254        ldr              r2,=max
  114 000000B4 E5922000        ldr              r2,[r2]
  115 000000B8 E1510002        cmp              r1,r2
  116 000000BC 1A000022        bne              finale      ;numero aleatorio
  117 000000C0         ; ??????????????????????????????????????????????????
  118 000000C0 E24DD004        sub              sp,sp,#4
  119 000000C4 EBFFFFFE        bl               rand        ; si primer bit es 
                                                            uno a la derecha si
                                                            no izquierda
  120 000000C8 E49D0004        pop{r0}
  121 000000CC E2000080        and              r0,r0,#2_10000000
  122 000000D0 E3500000        cmp              r0,#0
  123 000000D4 03E01000        moveq            r1,#-1
  124 000000D8 13A01001        movne            r1,#1
  125 000000DC         
  126 000000DC E59F821C        ldr              r8,=posAsterisco
  127 000000E0 E5983000        ldr              r3,[r8]     ; direccion del ast
                                                            erisco
  128 000000E4         
  129 000000E4 E3A0002E        ldr              r0,=quehabia
  130 000000E8 E5D02000        ldrb             r2,[r0]     ; guardo en r2 el c
                                                            aracter que habia e



ARM Macro Assembler    Page 5 


                                                            n la variable "queh
                                                            abia"
  131 000000EC E6C32001        strb             r2,[r3],r1  ; sustituyo el aste
                                                            risco por el caract
                                                            er de "quehabia"
  132 000000F0 E5D32000        ldrb             r2,[r3]     ; guardo en r2 el c
                                                            aracter que hay en 
                                                            la direccion a la q
                                                            ue se va a mover el
                                                             asterisco
  133 000000F4 E5C02000        strb             r2,[r0]     ; y guardo el carac
                                                            ter nuevo en memori
                                                            a
  134 000000F8         
  135 000000F8 E3A0002A        mov              r0,#asterisco
  136 000000FC E5C30000        strb             r0,[r3]     ; mueve el asterisc
                                                            o a la direccion nu
                                                            eva
  137 00000100 E5883000        str              r3,[r8]     ; actualiza la dire
                                                            ccion del asterisco
                                                            
  138 00000104         
  139 00000104 E59F7204        ldr              r7,=dirx
  140 00000108 E1D770D0        ldrsb            r7,[r7]
  141 0000010C E3A00000        mov              r0,#0
  142 00000110 E59F11E0        ldr              r1,=cont
  143 00000114 E5810000        str              r0,[r1]
  144 00000118 E59F11F4        ldr              r1,=reloj
  145 0000011C E5810000        str              r0,[r1]
  146 00000120 E1500007        cmp              r0,r7       ;ponemos reloj a ce
                                                            ro
  147 00000124         ;;;;;;;;;;;;;;    
  148 00000124 E59F81D0        ldr              r8,=posArroba ;movemos alumno
  149 00000128 E5983000        ldr              r3,[r8]
  150 0000012C E3A00020        mov              r0,#espblanco
  151 00000130 E6C30007        strb             r0,[r3],r7
  152 00000134 E3A00040        mov              r0,#arroba
  153 00000138 E5C30000        strb             r0, [r3]
  154 0000013C E5883000        str              r3,[r8]
  155 00000140 E59F71C8        ldr              r7,=dirx    ;poner al final
  156 00000144 E3A00000        mov              r0,#0
  157 00000148 E5C70000        strb             r0,[r7]
  158 0000014C         
  159 0000014C         finale
  160 0000014C E59F01B0        ldr              r0,=fin
  161 00000150 E5D00000        ldrb             r0,[r0]
  162 00000154 E3500000        cmp              r0,#0
  163 00000158 0AFFFFCA        beq              bucle
  164 0000015C         
  165 0000015C         final
  166 0000015C         ; desactivar IRQ4,IRQ7
  167 0000015C E59F01B4        ldr              r0,=VICIntEnClr
  168 00000160 E5901000        ldr              r1,[r0]
  169 00000164 E3811010        orr              r1,r1,#1<<IRQ_I4
  170 00000168 E3811080        orr              r1,r1,#1<<IRQ_I7
  171 0000016C E5801000        str              r1,[r0]
  172 00000170         
  173 00000170 EAFFFFFE 
                       bfin    b                bfin



ARM Macro Assembler    Page 6 


  174 00000174         
  175 00000174         sigue
  176 00000174 E3500041        cmp              r0,#65
  177 00000178 0A00000A        beq              izq
  178 0000017C E3500044        cmp              r0,#68
  179 00000180 0A00000C        beq              der
  180 00000184 E3500057        cmp              r0,#87
  181 00000188 0A00000E        beq              arriba
  182 0000018C E3500053        cmp              r0,#83
  183 00000190 0A000010        beq              abajo
  184 00000194 E350002B        cmp              r0,#43
  185 00000198 0A000012        beq              sumarmax
  186 0000019C E350002D        cmp              r0,#45
  187 000001A0 0A000017        beq              restarmax
  188 000001A4 EA000048        b                fintec
  189 000001A8         izq
  190 000001A8 E59F0160        ldr              r0,=dirx
  191 000001AC E3E01000        mov              r1,#-1
  192 000001B0 E5C01000        strb             r1,[r0]
  193 000001B4 EA000044        b                fintec
  194 000001B8         
  195 000001B8         der
  196 000001B8 E59F0150        ldr              r0, =dirx
  197 000001BC E3A01001        mov              r1, #1
  198 000001C0 E5C01000        strb             r1, [r0]
  199 000001C4 EA000040        b                fintec
  200 000001C8         
  201 000001C8         arriba
  202 000001C8 E59F014C        ldr              r0,=diry
  203 000001CC E3A01001        mov              r1,#1
  204 000001D0 E5C01000        strb             r1,[r0]
  205 000001D4 EA00003C        b                fintec
  206 000001D8         
  207 000001D8         abajo
  208 000001D8 E59F013C        ldr              r0,=diry
  209 000001DC E3E01000        mov              r1,#-1
  210 000001E0 E5C01000        strb             r1,[r0]
  211 000001E4 EA000038        b                fintec
  212 000001E8         
  213 000001E8         sumarmax
  214 000001E8 E59F011C        ldr              r0,=max
  215 000001EC E5901000        ldr              r1,[r0]
  216 000001F0 E2411001        sub              r1,r1,#1
  217 000001F4 E3510000        cmp              r1,#0
  218 000001F8 02811001        addeq            r1,r1,#1
  219 000001FC E5801000        str              r1,[r0]
  220 00000200 EA000031        b                fintec
  221 00000204         
  222 00000204         restarmax
  223 00000204 E59F0100        ldr              r0,=max
  224 00000208 E5901000        ldr              r1,[r0]
  225 0000020C E2811001        add              r1,r1,#1
  226 00000210 E3510C01        cmp              r1,#256
  227 00000214 02411001        subeq            r1,r1,#1
  228 00000218 E5801000        str              r1,[r0]
  229 0000021C EA00002A        b                fintec
  230 00000220         
  231 00000220         RSI_timer
  232 00000220 E24EE004        sub              lr, lr, #4



ARM Macro Assembler    Page 7 


  233 00000224 E52DE004        push{lr}                     ; Activo IRQs
  234 00000228 E14FE000        mrs              r14, spsr
  235 0000022C E52DE004        push{r14}
  236 00000230 E92D0003        push             {r0-r1}     ; apila registros a
                                                             utilizar
  237 00000234 E321F052        msr              cpsr_c,#2_01010010 ; habilita I
                                                            RQ de la palabra de
                                                             estado
  238 00000238         
  239 00000238 E59F00B8        ldr              r0,=cont
  240 0000023C E5901000        ldr              r1,[r0]
  241 00000240 E2811001        add              r1,#1
  242 00000244 E5801000        str              r1,[r0]
  243 00000248         
  244 00000248         ; desactiva del VIC la peticion
  245 00000248 E59F00D0        LDR              r0,=T0_IR   ;
  246 0000024C E3A01001        mov              r1,#1
  247 00000250 E5801000        str              r1,[r0]
  248 00000254         
  249 00000254 E59F00B8        ldr              r0,=reloj
  250 00000258 E5901000        ldr              r1,[r0]
  251 0000025C E2811001        add              r1, r1, #1
  252 00000260 E5801000        str              r1, [r0]
  253 00000264         
  254 00000264         ;desactiva IRQ
  255 00000264 E321F0D2        msr              cpsr_c,#2_11010010
  256 00000268 E8BD0003        POP{r0-r1}
  257 0000026C E49DE004        POP{r14}
  258 00000270 E16FF00E        msr              spsr_cxsf,r14
  259 00000274 E59FE0A8        LDR              r14,=VICVectAddr
  260 00000278 E58EE000        str              r14,[r14]
  261 0000027C E8FD8000        POP              {pc}^
  262 00000280         
  263 00000280         RSI_teclado
  264 00000280 E24EE004        sub              lr,#4
  265 00000284 E52DE004        push{lr}
  266 00000288 E14FE000        mrs              r14,spsr    ; Activo IRQs
  267 0000028C E52DE004        push{r14}
  268 00000290 E92D0007        PUSH             {r0-r2}
  269 00000294 E321F052        msr              cpsr_c,#2_01010010
  270 00000298         
  271 00000298 E59F0068        LDR              r0,=TEC_DAT
  272 0000029C E5D01000        ldrb             r1,[r0]     ; r1=codigo ASCII t
                                                            ecla
  273 000002A0 E3C11020        bic              r1,r1,#2_100000 ; transformo la
                                                             tecla a mayuscula
  274 000002A4         
  275 000002A4 E3510051        cmp              r1,#81      ; comparo con la le
                                                            tra 'Q' (finaliza e
                                                            l programa)
  276 000002A8 059F0054        ldreq            r0,=fin
  277 000002AC 03A01001        moveq            r1,#1
  278 000002B0 05801000        streq            r1,[r0]
  279 000002B4 0A000004        beq              fintec
  280 000002B8         
  281 000002B8 E59F2048        ldr              r2,=TEC_DAT ; guardamos la dire
                                                            ccion de la tecla p
                                                            ulsada
  282 000002BC E5C21000        strb             r1,[r2]     ; guardamos la tecl



ARM Macro Assembler    Page 8 


                                                            a pulsada en la dir
                                                            eccion de tecla
  283 000002C0         
  284 000002C0 E59F0030        ldr              r0,=cont
  285 000002C4 E3A01000        mov              r1,#0
  286 000002C8 E5801000        str              r1,[r0]
  287 000002CC         
  288 000002CC         fintec
  289 000002CC E321F0D2        msr              cpsr_c,#2_11010010
  290 000002D0 E8BD0007        POP{r0-r2}
  291 000002D4 E49DE004        POP{r14}
  292 000002D8 E16FF00E        msr              spsr_fsxc,r14
  293 000002DC E59FE040        LDR              r14,=VICVectAddr
  294 000002E0 E58EE000        str              r14,[r14]
  295 000002E4 E8FD8000        POP{PC}^
  296 000002E8         
  297 000002E8                 END
              FFFFF100 
              00000000 
              00000000 
              FFFFF010 
              00000000 
              00000000 
              00000000 
              00000000 
              E0010000 
              00000000 
              00000000 
              00000000 
              FFFFF014 
              00000000 
              E0004000 
              FFFFF030 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\b
uena.d -o.\buena.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC
:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__UVISION_VE
RSION SETA 514" --list=.\buena.lst buena.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

cont 00000014

Symbol: cont
   Definitions
      At line 26 in file buena.s
   Uses
      At line 68 in file buena.s
      At line 111 in file buena.s
      At line 142 in file buena.s
      At line 239 in file buena.s
      At line 284 in file buena.s

datos 00000000

Symbol: datos
   Definitions
      At line 1 in file buena.s
   Uses
      None
Comment: datos unused
dirx 00000018

Symbol: dirx
   Definitions
      At line 27 in file buena.s
   Uses
      At line 139 in file buena.s
      At line 155 in file buena.s
      At line 190 in file buena.s
      At line 196 in file buena.s

diry 00000019

Symbol: diry
   Definitions
      At line 28 in file buena.s
   Uses
      At line 202 in file buena.s
      At line 208 in file buena.s

fin 0000001A

Symbol: fin
   Definitions
      At line 29 in file buena.s
   Uses
      At line 101 in file buena.s
      At line 160 in file buena.s
      At line 276 in file buena.s

max 00000010

Symbol: max
   Definitions
      At line 25 in file buena.s
   Uses
      At line 113 in file buena.s
      At line 214 in file buena.s
      At line 223 in file buena.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


pantdown 00000020

Symbol: pantdown
   Definitions
      At line 35 in file buena.s
   Uses
      At line 80 in file buena.s
Comment: pantdown used once
pantup 0000001C

Symbol: pantup
   Definitions
      At line 34 in file buena.s
   Uses
      At line 79 in file buena.s
Comment: pantup used once
posArroba 00000024

Symbol: posArroba
   Definitions
      At line 40 in file buena.s
   Uses
      At line 89 in file buena.s
      At line 148 in file buena.s

posAsterisco 00000028

Symbol: posAsterisco
   Definitions
      At line 41 in file buena.s
   Uses
      At line 95 in file buena.s
      At line 126 in file buena.s

reloj 0000000C

Symbol: reloj
   Definitions
      At line 24 in file buena.s
   Uses
      At line 144 in file buena.s
      At line 249 in file buena.s

reloj_so 00000008

Symbol: reloj_so
   Definitions
      At line 17 in file buena.s
   Uses
      None
Comment: reloj_so unused
tecl_so 00000000

Symbol: tecl_so
   Definitions
      At line 15 in file buena.s
   Uses
      None



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Comment: tecl_so unused
terminar 00000004

Symbol: terminar
   Definitions
      At line 16 in file buena.s
   Uses
      None
Comment: terminar unused
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RSI_teclado 00000280

Symbol: RSI_teclado
   Definitions
      At line 263 in file buena.s
   Uses
      At line 58 in file buena.s
Comment: RSI_teclado used once
RSI_timer 00000220

Symbol: RSI_timer
   Definitions
      At line 231 in file buena.s
   Uses
      At line 54 in file buena.s
Comment: RSI_timer used once
abajo 000001D8

Symbol: abajo
   Definitions
      At line 207 in file buena.s
   Uses
      At line 183 in file buena.s
Comment: abajo used once
arriba 000001C8

Symbol: arriba
   Definitions
      At line 201 in file buena.s
   Uses
      At line 181 in file buena.s
Comment: arriba used once
bfin 00000170

Symbol: bfin
   Definitions
      At line 173 in file buena.s
   Uses
      At line 173 in file buena.s
Comment: bfin used once
borrar 0000005C

Symbol: borrar
   Definitions
      At line 84 in file buena.s
   Uses
      At line 87 in file buena.s
Comment: borrar used once
bucle 00000088

Symbol: bucle
   Definitions
      At line 100 in file buena.s
   Uses
      At line 109 in file buena.s
      At line 163 in file buena.s

codigo 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: codigo
   Definitions
      At line 46 in file buena.s
   Uses
      None
Comment: codigo unused
der 000001B8

Symbol: der
   Definitions
      At line 195 in file buena.s
   Uses
      At line 179 in file buena.s
Comment: der used once
final 0000015C

Symbol: final
   Definitions
      At line 165 in file buena.s
   Uses
      At line 104 in file buena.s
Comment: final used once
finale 0000014C

Symbol: finale
   Definitions
      At line 159 in file buena.s
   Uses
      At line 116 in file buena.s
Comment: finale used once
fintec 000002CC

Symbol: fintec
   Definitions
      At line 288 in file buena.s
   Uses
      At line 188 in file buena.s
      At line 193 in file buena.s
      At line 199 in file buena.s
      At line 205 in file buena.s
      At line 211 in file buena.s
      At line 220 in file buena.s
      At line 229 in file buena.s
      At line 279 in file buena.s

inicio 00000000

Symbol: inicio
   Definitions
      At line 51 in file buena.s
   Uses
      At line 47 in file buena.s
Comment: inicio used once
izq 000001A8

Symbol: izq
   Definitions
      At line 189 in file buena.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 177 in file buena.s
Comment: izq used once
restarmax 00000204

Symbol: restarmax
   Definitions
      At line 222 in file buena.s
   Uses
      At line 187 in file buena.s
Comment: restarmax used once
sigue 00000174

Symbol: sigue
   Definitions
      At line 175 in file buena.s
   Uses
      None
Comment: sigue unused
sumarmax 000001E8

Symbol: sumarmax
   Definitions
      At line 213 in file buena.s
   Uses
      At line 185 in file buena.s
Comment: sumarmax used once
17 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IOCLR E002800C

Symbol: IOCLR
   Definitions
      At line 13 in file buena.s
   Uses
      None
Comment: IOCLR unused
IOSET E0028004

Symbol: IOSET
   Definitions
      At line 12 in file buena.s
   Uses
      None
Comment: IOSET unused
IRQ_I4 00000004

Symbol: IRQ_I4
   Definitions
      At line 21 in file buena.s
   Uses
      At line 55 in file buena.s
      At line 64 in file buena.s
      At line 169 in file buena.s

IRQ_I7 00000007

Symbol: IRQ_I7
   Definitions
      At line 22 in file buena.s
   Uses
      At line 59 in file buena.s
      At line 65 in file buena.s
      At line 170 in file buena.s

T0_IR E0004000

Symbol: T0_IR
   Definitions
      At line 19 in file buena.s
   Uses
      At line 245 in file buena.s
Comment: T0_IR used once
TEC_DAT E0010000

Symbol: TEC_DAT
   Definitions
      At line 10 in file buena.s
   Uses
      At line 106 in file buena.s
      At line 271 in file buena.s
      At line 281 in file buena.s

VICIntEnClr FFFFF014

Symbol: VICIntEnClr
   Definitions
      At line 4 in file buena.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 167 in file buena.s
Comment: VICIntEnClr used once
VICIntEnable FFFFF010

Symbol: VICIntEnable
   Definitions
      At line 3 in file buena.s
   Uses
      At line 62 in file buena.s
Comment: VICIntEnable used once
VICSoftInt FFFFF018

Symbol: VICSoftInt
   Definitions
      At line 5 in file buena.s
   Uses
      None
Comment: VICSoftInt unused
VICSoftIntClear FFFFF01C

Symbol: VICSoftIntClear
   Definitions
      At line 6 in file buena.s
   Uses
      None
Comment: VICSoftIntClear unused
VICVectAddr FFFFF030

Symbol: VICVectAddr
   Definitions
      At line 8 in file buena.s
   Uses
      At line 259 in file buena.s
      At line 293 in file buena.s

VICVectAddr0 FFFFF100

Symbol: VICVectAddr0
   Definitions
      At line 7 in file buena.s
   Uses
      At line 52 in file buena.s
Comment: VICVectAddr0 used once
arroba 00000040

Symbol: arroba
   Definitions
      At line 37 in file buena.s
   Uses
      At line 91 in file buena.s
      At line 152 in file buena.s

asterisco 0000002A

Symbol: asterisco
   Definitions
      At line 39 in file buena.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 97 in file buena.s
      At line 135 in file buena.s

espblanco 00000020

Symbol: espblanco
   Definitions
      At line 36 in file buena.s
   Uses
      At line 150 in file buena.s
Comment: espblanco used once
puntos 0000002E

Symbol: puntos
   Definitions
      At line 38 in file buena.s
   Uses
      At line 81 in file buena.s
Comment: puntos used once
quehabia 0000002E

Symbol: quehabia
   Definitions
      At line 31 in file buena.s
   Uses
      At line 129 in file buena.s
Comment: quehabia used once
sem 00000003

Symbol: sem
   Definitions
      At line 33 in file buena.s
   Uses
      At line 73 in file buena.s
Comment: sem used once
18 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

rand 00000000

Symbol: rand
   Definitions
      At line 49 in file buena.s
   Uses
      At line 119 in file buena.s
Comment: rand used once
srand 00000000

Symbol: srand
   Definitions
      At line 48 in file buena.s
   Uses
      At line 75 in file buena.s
Comment: srand used once
2 symbols
385 symbols in table

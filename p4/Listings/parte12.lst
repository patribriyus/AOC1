


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             codigo, CODE
    2 00000000                 EXPORT           ordena
    3 00000000         
    4 00000000         ordena
    5 00000000 E92D4800        PUSH{fp,lr}                  ; empieza apilando 
                                                            el estado
    6 00000004 E1A0B00D        mov              fp,sp       ; guarda el puntero
                                                             de referencia dent
                                                            ro del bloque de ac
                                                            tivación
    7 00000008         
    8 00000008 E2411001        sub              r1,#1
    9 0000000C E0801101        add              r1,r0,r1,LSL#2
   10 00000010         
   11 00000010 E52D0004        PUSH{r0}
   12 00000014 E52D1004        PUSH{r1}
   13 00000018 EB000001        bl               qksort
   14 0000001C E28DD008        add              sp,sp,#8
   15 00000020 E8BD8800        pop{fp,pc}
   16 00000024         
   17 00000024         ; SUBRUTINA RECURSIVA
   18 00000024         
   19 00000024         qksort
   20 00000024 E92D4800        PUSH{fp,lr}                  ; empieza apilando 
                                                            el estado
   21 00000028 E1A0B00D        mov              fp,sp       ; guarda el puntero
                                                             de referencia dent
                                                            ro del bloque de ac
                                                            tivación
   22 0000002C E92D00FF        PUSH{r0-r7}                  ; almaceno todo el 
                                                            estado para poder l
                                                            uego recuperar los 
                                                            valores de los regi
                                                            stros
   23 00000030 E59B000C        ldr              r0,[fp,#12] ; @iz
   24 00000034 E59B1008        ldr              r1,[fp,#8]  ; @de
   25 00000038         
   26 00000038 E0412000        sub              r2,r1,r0    ; diferencia entre 
                                                            las direcciones en 
                                                            bytes
   27 0000003C E1A021A2        LSR              r2,#3       ; diferencia en num
                                                            ero normal (/4) y d
                                                            istancia entre izq 
                                                            y el valor medio (/
                                                            2)
   28 00000040 E0802102        add              r2,r0,r2,LSL#2 ; @(iz+de)/2 
   29 00000044 E5923000        ldr              r3,[r2]     ; valor de X
   30 00000048         
   31 00000048 E1A06000        mov              r6,r0       ; indice i
   32 0000004C E1A07001        mov              r7,r1       ; indice j
   33 00000050         
   34 00000050         w1
   35 00000050 E5964000        ldr              r4,[r6]     ; guardo en r4 el v
                                                            alor de T[i]
   36 00000054 E1540003        cmp              r4,r3       ; si T[i]<x
   37 00000058 B2866004        addlt            r6,#4       ; i++
   38 0000005C BAFFFFFB        blt              w1          ; vuelve a hacerse 
                                                            el bucle
   39 00000060         



ARM Macro Assembler    Page 2 


   40 00000060         w2
   41 00000060 E5975000        ldr              r5,[r7]     ; guardo en r5 el v
                                                            alor de T[j]
   42 00000064 E1530005        cmp              r3,r5       ; si x<T[j]
   43 00000068 B2477004        sublt            r7,#4       ; j--
   44 0000006C BAFFFFFB        blt              w2          ; vuelve a hacerse 
                                                            el bucle
   45 00000070         
   46 00000070 E1560007        cmp              r6,r7       ; si i<=j
   47 00000074 D5874000        strle            r4,[r7]     ; T[j]=T[i]
   48 00000078 D5865000        strle            r5,[r6]     ; T[i]=T[j]
   49 0000007C D2866004        addle            r6,#4       ; i++
   50 00000080 D2477004        suble            r7,#4       ; j--
   51 00000084         
   52 00000084 E1560007        cmp              r6,r7       ; si i<=j
   53 00000088 DAFFFFF0        ble              w1
   54 0000008C         
   55 0000008C E1500007 
                       if1     cmp              r0,r7       ; iz<j
   56 00000090 AA000003        bge              if2
   57 00000094 E52D0004        PUSH{r0}
   58 00000098 E52D7004        PUSH{r7}
   59 0000009C EBFFFFE0        bl               qksort
   60 000000A0 E28DD008        add              sp,sp,#8
   61 000000A4         
   62 000000A4         if2
   63 000000A4 E1560001        cmp              r6,r1       ; i<de
   64 000000A8 AA000003        bge              f
   65 000000AC E52D6004        PUSH{r6}
   66 000000B0 E52D1004        PUSH{r1}
   67 000000B4 EBFFFFDA        bl               qksort
   68 000000B8 E28DD008        add              sp,sp,#8
   69 000000BC         
   70 000000BC E8BD00FF 
                       f       pop{r0-r7}
   71 000000C0 E8BD8800        pop{fp,pc}
   72 000000C4         
   73 000000C4                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\parte12.d -o.\objects\parte12.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\A
RM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --pre
define="__UVISION_VERSION SETA 514" --list=.\listings\parte12.lst parte12.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

codigo 00000000

Symbol: codigo
   Definitions
      At line 1 in file parte12.s
   Uses
      None
Comment: codigo unused
f 000000BC

Symbol: f
   Definitions
      At line 70 in file parte12.s
   Uses
      At line 64 in file parte12.s
Comment: f used once
if1 0000008C

Symbol: if1
   Definitions
      At line 55 in file parte12.s
   Uses
      None
Comment: if1 unused
if2 000000A4

Symbol: if2
   Definitions
      At line 62 in file parte12.s
   Uses
      At line 56 in file parte12.s
Comment: if2 used once
ordena 00000000

Symbol: ordena
   Definitions
      At line 4 in file parte12.s
   Uses
      At line 2 in file parte12.s
Comment: ordena used once
qksort 00000024

Symbol: qksort
   Definitions
      At line 19 in file parte12.s
   Uses
      At line 13 in file parte12.s
      At line 59 in file parte12.s
      At line 67 in file parte12.s

w1 00000050

Symbol: w1
   Definitions
      At line 34 in file parte12.s
   Uses
      At line 38 in file parte12.s
      At line 53 in file parte12.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

w2 00000060

Symbol: w2
   Definitions
      At line 40 in file parte12.s
   Uses
      At line 44 in file parte12.s
Comment: w2 used once
8 symbols
340 symbols in table

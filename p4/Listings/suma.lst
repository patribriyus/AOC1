


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             datos, DATA, READWRITE
    2 00000000 00000004 
              00000008 
              00000005 
              00000009 
              00000001 
              00000006 
              00000002 
              00000007 
              00000003 
              00000000 T       DCD              4,8,5,9,1,6,2,7,3,0
    3 00000028 0000000A 
                       N       EQU              10
    4 00000028         
    5 00000028                 AREA             codigo, CODE, READONLY
    6 00000000         ;ENTRY
    7 00000000         
    8 00000000 E59F00E8        LDR              r0,=T       ; r0 = @T
    9 00000004 E3A0100A        mov              r1,#N       ; r1 = N
   10 00000008 E52D0004        PUSH{r0}
   11 0000000C E52D1004        push{r1}
   12 00000010 EB000001        bl               ordena
   13 00000014 E28DD008        add              sp,sp,#8
   14 00000018         
   15 00000018 EAFFFFFE 
                       fin     b                fin
   16 0000001C         
   17 0000001C         ordena
   18 0000001C E92D4800        PUSH{fp,lr}
   19 00000020 E1A0B00D        mov              fp,sp
   20 00000024 E92D0003        PUSH{r0,r1}
   21 00000028 E59B000C        ldr              r0,[fp,#12] ; guardamos en r0 l
                                                            a dirección inicial
                                                             de T
   22 0000002C E59B1008        ldr              r1,[fp,#8]  ; guardamos en r1 e
                                                            l valor de N
   23 00000030 E2411001        sub              r1,#1       ; r1 = N-1
   24 00000034 E0801101        add              r1,r0,r1,LSL#2 ; r1 = (N-1)*4
   25 00000038         
   26 00000038 E52D0004        push{r0}                     ; r0=@iz
   27 0000003C E52D1004        push{r1}                     ; r1=@der
   28 00000040 EB000002        bl               qksort
   29 00000044 E28DD008        add              sp,sp,#8
   30 00000048 E8BD0003        pop{r0,r1}
   31 0000004C E8BD8800        pop{fp,pc}
   32 00000050         
   33 00000050         ;llamada a sbr
   34 00000050         
   35 00000050         qksort
   36 00000050 E92D4800        PUSH{fp,lr}
   37 00000054 E1A0B00D        mov              fp,sp
   38 00000058 E92D00FF        PUSH{r0-r7}                  ; registros usados
   39 0000005C E59B000C        ldr              r0,[fp,#12] ; r0 = @iz ????????
                                                            ????
   40 00000060 E59B1008        ldr              r1,[fp,#8]  ; r1 = @der ???????
                                                            ????
   41 00000064         
   42 00000064 E0412000        sub              r2,r1,r0    ; r2=bytes entre @i
                                                            z y @der



ARM Macro Assembler    Page 2 


   43 00000068 E1A021A2        LSR              r2,#3       ; distancia entre i
                                                            z y valor medio
   44 0000006C E0802102        add              r2,r0,r2,LSL#2 ; r2 = @med
   45 00000070 E5925000        ldr              r5,[r2]     ; r5 = med
   46 00000074         
   47 00000074 E1A06000        mov              r6,r0       ; r6 = i
   48 00000078 E1A07001        mov              r7,r1       ; r7 = j
   49 0000007C         
   50 0000007C         while1
   51 0000007C E5963000        ldr              r3,[r6]     ; r3=iz
   52 00000080 E1550003        cmp              r5,r3
   53 00000084 C2866004        addgt            r6,#4
   54 00000088 CAFFFFFB        bgt              while1
   55 0000008C         
   56 0000008C         while2
   57 0000008C E5974000        ldr              r4,[r7]     ;r4=der
   58 00000090 E1540005        cmp              r4,r5
   59 00000094 C2477004        subgt            r7,#4
   60 00000098 CAFFFFFB        bgt              while2
   61 0000009C         
   62 0000009C E1560007        cmp              r6,r7
   63 000000A0 D5873000        strle            r3,[r7]
   64 000000A4 D5864000        strle            r4,[r6]
   65 000000A8 D2866004        addle            r6,#4
   66 000000AC D2477004        suble            r7,#4
   67 000000B0         
   68 000000B0 E1560007        cmp              r6,r7
   69 000000B4 DAFFFFF0        ble              while1
   70 000000B8         
   71 000000B8 E1500007 
                       if1     cmp              r0,r7
   72 000000BC AA000003        bge              if2
   73 000000C0 E52D0004        push             {r0}
   74 000000C4 E52D7004        push             {r7}
   75 000000C8 EBFFFFE0        bl               qksort
   76 000000CC E28DD008        add              sp,sp,#8
   77 000000D0         
   78 000000D0         if2
   79 000000D0 E1560001        cmp              r6,r1
   80 000000D4 AA000003        bge              f
   81 000000D8 E52D6004        push{r6}
   82 000000DC E52D1004        push{r1}
   83 000000E0 EBFFFFDA        bl               qksort
   84 000000E4 E28DD008        add              sp,sp,#8
   85 000000E8         
   86 000000E8 E8BD00FF 
                       f       pop{r0-r7}
   87 000000EC E8BD8800        pop{fp,pc}
   88 000000F0         
   89 000000F0                 END
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\suma.d -o.\objects\suma.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMS
IS\Include -IC:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine
="__UVISION_VERSION SETA 514" --list=.\listings\suma.lst suma.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

T 00000000

Symbol: T
   Definitions
      At line 2 in file suma.s
   Uses
      At line 8 in file suma.s
Comment: T used once
datos 00000000

Symbol: datos
   Definitions
      At line 1 in file suma.s
   Uses
      None
Comment: datos unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

codigo 00000000

Symbol: codigo
   Definitions
      At line 5 in file suma.s
   Uses
      None
Comment: codigo unused
f 000000E8

Symbol: f
   Definitions
      At line 86 in file suma.s
   Uses
      At line 80 in file suma.s
Comment: f used once
fin 00000018

Symbol: fin
   Definitions
      At line 15 in file suma.s
   Uses
      At line 15 in file suma.s
Comment: fin used once
if1 000000B8

Symbol: if1
   Definitions
      At line 71 in file suma.s
   Uses
      None
Comment: if1 unused
if2 000000D0

Symbol: if2
   Definitions
      At line 78 in file suma.s
   Uses
      At line 72 in file suma.s
Comment: if2 used once
ordena 0000001C

Symbol: ordena
   Definitions
      At line 17 in file suma.s
   Uses
      At line 12 in file suma.s
Comment: ordena used once
qksort 00000050

Symbol: qksort
   Definitions
      At line 35 in file suma.s
   Uses
      At line 28 in file suma.s
      At line 75 in file suma.s
      At line 83 in file suma.s

while1 0000007C



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: while1
   Definitions
      At line 50 in file suma.s
   Uses
      At line 54 in file suma.s
      At line 69 in file suma.s

while2 0000008C

Symbol: while2
   Definitions
      At line 56 in file suma.s
   Uses
      At line 60 in file suma.s
Comment: while2 used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

N 0000000A

Symbol: N
   Definitions
      At line 3 in file suma.s
   Uses
      At line 9 in file suma.s
Comment: N used once
1 symbol
346 symbols in table
